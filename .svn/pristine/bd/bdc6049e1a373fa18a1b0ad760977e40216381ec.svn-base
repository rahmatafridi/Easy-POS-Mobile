//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PointOfSale.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PointOfSaleEntities : DbContext
    {
        public PointOfSaleEntities()
            : base("name=PointOfSaleEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ApplicationLogging> ApplicationLoggings { get; set; }
        public virtual DbSet<AssignedPermission> AssignedPermissions { get; set; }
        public virtual DbSet<AvailablePermission> AvailablePermissions { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Color> Colors { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<ItemPurchaseDetail> ItemPurchaseDetails { get; set; }
        public virtual DbSet<ItemPurchaseMain> ItemPurchaseMains { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<SaleMain> SaleMains { get; set; }
        public virtual DbSet<SellingItem> SellingItems { get; set; }
        public virtual DbSet<Size> Sizes { get; set; }
        public virtual DbSet<UnitOfMeasure> UnitOfMeasures { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserTypeLookup> UserTypeLookups { get; set; }
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<Warehouse> Warehouses { get; set; }
        public virtual DbSet<WarehouseTransfer> WarehouseTransfers { get; set; }
        public virtual DbSet<WarehouseTransferMain> WarehouseTransferMains { get; set; }
        public virtual DbSet<SubCategory> SubCategories { get; set; }
        public virtual DbSet<Barcode> Barcodes { get; set; }
        public virtual DbSet<EntryTypeLookUp> EntryTypeLookUps { get; set; }
        public virtual DbSet<PaymentMethodsLookup> PaymentMethodsLookups { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<VendorPaymentLog> VendorPaymentLogs { get; set; }
        public virtual DbSet<VendorPayment> VendorPayments { get; set; }
        public virtual DbSet<CustomerPaymentLog> CustomerPaymentLogs { get; set; }
        public virtual DbSet<CustomerPayment> CustomerPayments { get; set; }
        public virtual DbSet<DiscountOnBrand> DiscountOnBrands { get; set; }
        public virtual DbSet<ClientDetail> ClientDetails { get; set; }
        public virtual DbSet<RefundMain> RefundMains { get; set; }
        public virtual DbSet<RefundDetail> RefundDetails { get; set; }
        public virtual DbSet<SaleDetail> SaleDetails { get; set; }
        public virtual DbSet<VendorRefundDetail> VendorRefundDetails { get; set; }
        public virtual DbSet<VendorRefundMain> VendorRefundMains { get; set; }
        public virtual DbSet<DailyExpense> DailyExpenses { get; set; }
    
        public virtual ObjectResult<string> GetUserPermissions(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetUserPermissions", userIDParameter);
        }
    
        public virtual int InsertGenerator(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertGenerator", tableNameParameter);
        }
    
        public virtual ObjectResult<InvoiceDetail_Result> InvoiceDetail(Nullable<int> billId)
        {
            var billIdParameter = billId.HasValue ?
                new ObjectParameter("BillId", billId) :
                new ObjectParameter("BillId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InvoiceDetail_Result>("InvoiceDetail", billIdParameter);
        }
    
        public virtual ObjectResult<LoadProductBarcodeByUID_Result> LoadProductBarcodeByUID(Nullable<System.Guid> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadProductBarcodeByUID_Result>("LoadProductBarcodeByUID", uIDParameter);
        }
    
        public virtual ObjectResult<LoadProductBarcodeByUIDandBarcode_Result> LoadProductBarcodeByUIDandBarcode(Nullable<System.Guid> uID, string barcode)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(System.Guid));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadProductBarcodeByUIDandBarcode_Result>("LoadProductBarcodeByUIDandBarcode", uIDParameter, barcodeParameter);
        }
    
        public virtual ObjectResult<ProductDetailsByBarcode_Result> ProductDetailsByBarcode(string barcode)
        {
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductDetailsByBarcode_Result>("ProductDetailsByBarcode", barcodeParameter);
        }
    
        public virtual ObjectResult<GetDiscount_Result> GetDiscount(Nullable<int> customerId, string barcode)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDiscount_Result>("GetDiscount", customerIdParameter, barcodeParameter);
        }
    
        public virtual ObjectResult<GetProductDetailsByBarcode_Result> GetProductDetailsByBarcode(string barcode)
        {
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductDetailsByBarcode_Result>("GetProductDetailsByBarcode", barcodeParameter);
        }
    
        public virtual ObjectResult<InvoiceDetailForReseller_Result> InvoiceDetailForReseller(Nullable<int> billId)
        {
            var billIdParameter = billId.HasValue ?
                new ObjectParameter("BillId", billId) :
                new ObjectParameter("BillId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InvoiceDetailForReseller_Result>("InvoiceDetailForReseller", billIdParameter);
        }
    
        public virtual ObjectResult<InvoiceDetailForRefund_Result> InvoiceDetailForRefund(Nullable<int> billId)
        {
            var billIdParameter = billId.HasValue ?
                new ObjectParameter("BillId", billId) :
                new ObjectParameter("BillId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InvoiceDetailForRefund_Result>("InvoiceDetailForRefund", billIdParameter);
        }
    
        public virtual ObjectResult<CustomerLedgerReport_Result> CustomerLedgerReport(string uID)
        {
            var uIDParameter = uID != null ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerLedgerReport_Result>("CustomerLedgerReport", uIDParameter);
        }
    
        public virtual ObjectResult<CustomerLedgerReportWithDateRange_Result> CustomerLedgerReportWithDateRange(string uID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var uIDParameter = uID != null ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerLedgerReportWithDateRange_Result>("CustomerLedgerReportWithDateRange", uIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<InvoiceDetailForVendorRefund_Result> InvoiceDetailForVendorRefund(Nullable<int> billId)
        {
            var billIdParameter = billId.HasValue ?
                new ObjectParameter("BillId", billId) :
                new ObjectParameter("BillId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InvoiceDetailForVendorRefund_Result>("InvoiceDetailForVendorRefund", billIdParameter);
        }
    
        public virtual ObjectResult<VendorLedgerReport_Result> VendorLedgerReport(string uID)
        {
            var uIDParameter = uID != null ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLedgerReport_Result>("VendorLedgerReport", uIDParameter);
        }
    
        public virtual ObjectResult<VendorLedgerReportWithDate_Result> VendorLedgerReportWithDate(string uID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var uIDParameter = uID != null ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VendorLedgerReportWithDate_Result>("VendorLedgerReportWithDate", uIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<TodayLastFifteenSale_Result> TodayLastFifteenSale()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TodayLastFifteenSale_Result>("TodayLastFifteenSale");
        }
    
        public virtual ObjectResult<GetTop10MostSellingItems_Result> GetTop10MostSellingItems(Nullable<int> duration)
        {
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTop10MostSellingItems_Result>("GetTop10MostSellingItems", durationParameter);
        }
    
        public virtual ObjectResult<LoadProductBarcode_Result> LoadProductBarcode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadProductBarcode_Result>("LoadProductBarcode");
        }
    
        public virtual ObjectResult<LoadProductBarcodeForPrint_Result> LoadProductBarcodeForPrint()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadProductBarcodeForPrint_Result>("LoadProductBarcodeForPrint");
        }
    }
}
